<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.second.community.dao.MessageMapper">

    <select id="selectConversations" resultType="message">
        select * from message where id in (
            select max(id) from message where status != 2
            and from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
            GROUP BY conversation_id
        )
        order by id desc
        limit #{offset} , #{limit}
    </select>

    <select id="selectConversationCount" resultType="int">
        select count(m.maxid) from (
            select max(id) as maxid from message where status != 2
            and from_id != 1
            and (from_id =#{userId} or to_id = #{userId})
            group by conversation_id
        ) as m
    </select>

    <select id="selectLetters" resultType="message">
        select * from message where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        order by id desc
        limit #{offset} , #{limit}
    </select>

    <select id="selectLetterCount" resultType="int">
        select count(*) from message where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="int">
        select count(*) from message where status = 0
        and from_id != 1
        and to_id =#{userId}
        <if test="conversationId != null">and conversation_id = #{conversationId}</if>
    </select>

    <insert id="insertMessage" parameterType="message" keyProperty="id">
        insert into message(from_id,to_id,conversation_id,content,status,create_time)
        values (#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectLatestNotice" resultType="message">
        select * from message where id in (
        select max(id) from message where to_id = #{userId} and status != 2 and conversation_id = #{topic}
        and from_id = 1)
    </select>

    <select id="selectNoticeCount" resultType="int" >
        select count(id) from message where to_id = #{userId} and status != 2 and conversation_id = #{topic}
        and from_id = 1
    </select>

    <select id="selectNoticeUnreadCount" resultType="int">
        select count(id) from message where to_id = #{userId} and status = 0
        <if test="topic != null">
            and conversation_id = #{topic}
        </if>
        and from_id = 1
    </select>

    <select id="selectNotices" resultType="message">
        select * from message where from_id = 1 and to_id = #{userId} and status != 2
        and conversation_id = #{topic}
        order by create_time desc
        limit #{offset} , #{limit}
    </select>
</mapper>